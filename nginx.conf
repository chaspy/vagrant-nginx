worker_processes 1;

events {
    worker_connections 1024;
}

http {
    include      mime.types;
    default_type application/octet-stream;

    sendfile on;
    tcp_nopush on;

    keepalive_timeout 60;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                       '$status $body_bytes_sent "$http_referer" '
                       '"http_user_agent" "$http_x_forwarded_for"';

    limit_conn_zone $binary_remote_addr zone=addr_limit_conn:10m;
    limit_req_zone $binary_remote_addr zone=addr_limit_req:10m rate=10r/s;

    server {
        listen 80;
        server_name www.example.com;

        access_log /var/log/nginx/www.example.com_access.log main;
        error_log /var/log/nginx/www.example.com_error.log;

        root /var/www/html;

        error_page 404 /404.html;
        error_page 500 502 503 504 /50x.html;

        location / {
            limit_conn addr_limit_conn 10;
            limit_req zone=addr_limit_req burst=50;
        }

        location /images/ {
            root /var/www/images;
        }

                # return sum of 1 to n.
        # GET /sum?n=10 -> 55
        location /sum {
          default_type text/plain;

          set_by_lua $sum "
              result = 0
              for i=1, ngx.var.arg_n do
                  result = result + i
              end
              return result
          ";

          return 200 $sum;
        }

        location /hello {
            default_type text/plain;

            content_by_lua '
                ngx.say("Hello, world!")
            ';
        }
        
        location = /maintenance.html {

            access_by_lua '
                ngx.exit(ngx.HTTP_FORBIDDEN)
            ';
        }

        location /fizzbuzz {
            mruby_content_handler /usr/local/nginx/conf/fizzbuzz.rb;
        }

        location /redirect {
            mruby_rewrite_handler_code '
                Nginx.redirect "/fizzbuzz", Nginx::HTTP_MOVED_PERMANENTLY
	    ';
        }
    }
}
